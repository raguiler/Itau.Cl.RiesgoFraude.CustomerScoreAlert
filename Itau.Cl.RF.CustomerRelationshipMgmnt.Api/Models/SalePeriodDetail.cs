/*
 * Datamart Customer Relationship Management
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System.Runtime.Serialization;
using System.Text;
using System.Text.Json;


namespace Itau.Cl.RF.CustomerRelationshipMgmnt.Bff.API.Models
{
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class SalePeriodDetail : IEquatable<SalePeriodDetail>
    {
        /// <summary>
        /// Gets or Sets Month
        /// </summary>

        [DataMember(Name = "month")]
        public int? Month { get; set; }

        /// <summary>
        /// Gets or Sets NameCorporateSales
        /// </summary>

        [DataMember(Name = "nameCorporateSales")]
        public string NameCorporateSales { get; set; }

        /// <summary>
        /// Gets or Sets ClientIdSales
        /// </summary>

        [DataMember(Name = "clientIdSales")]
        public int? ClientIdSales { get; set; }

        /// <summary>
        /// Gets or Sets PayDay
        /// </summary>

        [DataMember(Name = "payDay")]
        public long? PayDay { get; set; }

        /// <summary>
        /// Gets or Sets FolioSales
        /// </summary>

        [DataMember(Name = "folioSales")]
        public long? FolioSales { get; set; }

        /// <summary>
        /// Gets or Sets ExemptSalesAmountNoOrder
        /// </summary>

        [DataMember(Name = "exemptSalesAmountNoOrder")]
        public long? ExemptSalesAmountNoOrder { get; set; }

        /// <summary>
        /// Gets or Sets ExemptSalesAmountOrder
        /// </summary>

        [DataMember(Name = "exemptSalesAmountOrder")]
        public long? ExemptSalesAmountOrder { get; set; }

        /// <summary>
        /// Gets or Sets ExemptSalesWithRetentionOnMargeCommercial
        /// </summary>

        [DataMember(Name = "exemptSalesWithRetentionOnMargeCommercial")]
        public long? ExemptSalesWithRetentionOnMargeCommercial { get; set; }

        /// <summary>
        /// Gets or Sets AmountNotesDebitReceived
        /// </summary>

        [DataMember(Name = "amountNotesDebitReceived")]
        public long? AmountNotesDebitReceived { get; set; }

        /// <summary>
        /// Gets or Sets AmountNotesDebitSendOrder
        /// </summary>

        [DataMember(Name = "amountNotesDebitSendOrder")]
        public long? AmountNotesDebitSendOrder { get; set; }

        /// <summary>
        /// Gets or Sets AmountNotesCreditForSalesNoOrder
        /// </summary>

        [DataMember(Name = "amountNotesCreditForSalesNoOrder")]
        public long? AmountNotesCreditForSalesNoOrder { get; set; }

        /// <summary>
        /// Gets or Sets AmountNotesCreditForMachineVouchers
        /// </summary>

        [DataMember(Name = "amountNotesCreditForMachineVouchers")]
        public long? AmountNotesCreditForMachineVouchers { get; set; }

        /// <summary>
        /// Gets or Sets AmountNotesCreditForBill
        /// </summary>

        [DataMember(Name = "amountNotesCreditForBill")]
        public long? AmountNotesCreditForBill { get; set; }

        /// <summary>
        /// Gets or Sets AmountNotesCredit
        /// </summary>

        [DataMember(Name = "amountNotesCredit")]
        public long? AmountNotesCredit { get; set; }

        /// <summary>
        /// Gets or Sets AmountLiquidationBill
        /// </summary>

        [DataMember(Name = "amountLiquidationBill")]
        public long? AmountLiquidationBill { get; set; }

        /// <summary>
        /// Gets or Sets AmountImportsOrder
        /// </summary>

        [DataMember(Name = "amountImportsOrder")]
        public long? AmountImportsOrder { get; set; }

        /// <summary>
        /// Gets or Sets AmountImportsFixActive
        /// </summary>

        [DataMember(Name = "amountImportsFixActive")]
        public long? AmountImportsFixActive { get; set; }

        /// <summary>
        /// Gets or Sets AmountImports
        /// </summary>

        [DataMember(Name = "amountImports")]
        public long? AmountImports { get; set; }

        /// <summary>
        /// Gets or Sets AmountRetentionParcialNeto
        /// </summary>

        [DataMember(Name = "amountRetentionParcialNeto")]
        public long? AmountRetentionParcialNeto { get; set; }

        /// <summary>
        /// Gets or Sets AmountBillNoOrder
        /// </summary>

        [DataMember(Name = "amountBillNoOrder")]
        public long? AmountBillNoOrder { get; set; }

        /// <summary>
        /// Gets or Sets AmountBillBuyOrder
        /// </summary>

        [DataMember(Name = "amountBillBuyOrder")]
        public long? AmountBillBuyOrder { get; set; }

        /// <summary>
        /// Gets or Sets AmountBillBuyActiveFix
        /// </summary>

        [DataMember(Name = "amountBillBuyActiveFix")]
        public long? AmountBillBuyActiveFix { get; set; }

        /// <summary>
        /// Gets or Sets AmountBill
        /// </summary>

        [DataMember(Name = "amountBill")]
        public long? AmountBill { get; set; }

        /// <summary>
        /// Gets or Sets AmountExports
        /// </summary>

        [DataMember(Name = "amountExports")]
        public long? AmountExports { get; set; }

        /// <summary>
        /// Gets or Sets AmountContDetain
        /// </summary>

        [DataMember(Name = "amountContDetain")]
        public long? AmountContDetain { get; set; }

        /// <summary>
        /// Gets or Sets AmountBuyInternalExemptoNoTaxed
        /// </summary>

        [DataMember(Name = "amountBuyInternalExemptoNoTaxed")]
        public long? AmountBuyInternalExemptoNoTaxed { get; set; }

        /// <summary>
        /// Gets or Sets AmountBuyInternalAffects
        /// </summary>

        [DataMember(Name = "amountBuyInternalAffects")]
        public long? AmountBuyInternalAffects { get; set; }

        /// <summary>
        /// Gets or Sets AmountTickets
        /// </summary>

        [DataMember(Name = "amountTickets")]
        public long? AmountTickets { get; set; }

        /// <summary>
        /// Gets or Sets SalesNetasTotalMilesCLP
        /// </summary>

        [DataMember(Name = "salesNetasTotalMilesCLP")]
        public long? SalesNetasTotalMilesCLP { get; set; }

        /// <summary>
        /// Gets or Sets SalesNetasPocketsMilesCLP
        /// </summary>

        [DataMember(Name = "salesNetasPocketsMilesCLP")]
        public long? SalesNetasPocketsMilesCLP { get; set; }

        /// <summary>
        /// Gets or Sets SalesNetasBillMilesCLP
        /// </summary>

        [DataMember(Name = "salesNetasBillMilesCLP")]
        public long? SalesNetasBillMilesCLP { get; set; }

        /// <summary>
        /// Gets or Sets SalesNetasUf
        /// </summary>

        [DataMember(Name = "salesNetasUf")]
        public long? SalesNetasUf { get; set; }

        /// <summary>
        /// Gets or Sets SalesNetasMilesCLP
        /// </summary>

        [DataMember(Name = "salesNetasMilesCLP")]
        public long? SalesNetasMilesCLP { get; set; }

        /// <summary>
        /// Gets or Sets NetasSales
        /// </summary>

        [DataMember(Name = "netasSales")]
        public long? NetasSales { get; set; }

        /// <summary>
        /// Gets or Sets SalesExemptNoOrder
        /// </summary>

        [DataMember(Name = "salesExemptNoOrder")]
        public long? SalesExemptNoOrder { get; set; }

        /// <summary>
        /// Gets or Sets SalesExemptMilesCLP
        /// </summary>

        [DataMember(Name = "salesExemptMilesCLP")]
        public long? SalesExemptMilesCLP { get; set; }

        /// <summary>
        /// Gets or Sets SalesExempt
        /// </summary>

        [DataMember(Name = "salesExempt")]
        public long? SalesExempt { get; set; }

        /// <summary>
        /// Gets or Sets SalesWithRetentionAboutMargenCommercialization
        /// </summary>

        [DataMember(Name = "salesWithRetentionAboutMargenCommercialization")]
        public long? SalesWithRetentionAboutMargenCommercialization { get; set; }

        /// <summary>
        /// Gets or Sets RetentionPartial
        /// </summary>

        [DataMember(Name = "retentionPartial")]
        public long? RetentionPartial { get; set; }

        /// <summary>
        /// Gets or Sets NotesDebitReceived
        /// </summary>

        [DataMember(Name = "notesDebitReceived")]
        public long? NotesDebitReceived { get; set; }

        /// <summary>
        /// Gets or Sets NotesDebitSendOrder
        /// </summary>

        [DataMember(Name = "notesDebitSendOrder")]
        public long? NotesDebitSendOrder { get; set; }

        /// <summary>
        /// Gets or Sets NotesCreditForValesMachines
        /// </summary>

        [DataMember(Name = "notesCreditForValesMachines")]
        public long? NotesCreditForValesMachines { get; set; }

        /// <summary>
        /// Gets or Sets NotesCreditBySalesNoOrder
        /// </summary>

        [DataMember(Name = "notesCreditBySalesNoOrder")]
        public long? NotesCreditBySalesNoOrder { get; set; }

        /// <summary>
        /// Gets or Sets NotesCreditForBill
        /// </summary>

        [DataMember(Name = "notesCreditForBill")]
        public long? NotesCreditForBill { get; set; }

        /// <summary>
        /// Gets or Sets CreditNotes
        /// </summary>

        [DataMember(Name = "creditNotes")]
        public long? CreditNotes { get; set; }

        /// <summary>
        /// Gets or Sets Margin
        /// </summary>

        [DataMember(Name = "margin")]
        public long? Margin { get; set; }

        /// <summary>
        /// Gets or Sets LiquidationBill
        /// </summary>

        [DataMember(Name = "liquidationBill")]
        public long? LiquidationBill { get; set; }

        /// <summary>
        /// Gets or Sets GiroImports
        /// </summary>

        [DataMember(Name = "giroImports")]
        public long? GiroImports { get; set; }

        /// <summary>
        /// Gets or Sets ImportsActiveFix
        /// </summary>

        [DataMember(Name = "importsActiveFix")]
        public long? ImportsActiveFix { get; set; }

        /// <summary>
        /// Gets or Sets Imports
        /// </summary>

        [DataMember(Name = "imports")]
        public long? Imports { get; set; }

        /// <summary>
        /// Gets or Sets BillNoOrder
        /// </summary>

        [DataMember(Name = "billNoOrder")]
        public long? BillNoOrder { get; set; }

        /// <summary>
        /// Gets or Sets BillBuyRder
        /// </summary>

        [DataMember(Name = "billBuyRder")]
        public long? BillBuyRder { get; set; }

        /// <summary>
        /// Gets or Sets BillBuyActiveFix
        /// </summary>

        [DataMember(Name = "billBuyActiveFix")]
        public long? BillBuyActiveFix { get; set; }

        /// <summary>
        /// Gets or Sets Bills
        /// </summary>

        [DataMember(Name = "bills")]
        public long? Bills { get; set; }

        /// <summary>
        /// Gets or Sets ExportsMilesCLP
        /// </summary>

        [DataMember(Name = "exportsMilesCLP")]
        public long? ExportsMilesCLP { get; set; }

        /// <summary>
        /// Gets or Sets Exports
        /// </summary>

        [DataMember(Name = "exports")]
        public long? Exports { get; set; }

        /// <summary>
        /// Gets or Sets ContDetain
        /// </summary>

        [DataMember(Name = "contDetain")]
        public long? ContDetain { get; set; }

        /// <summary>
        /// Gets or Sets NetasBuyUf
        /// </summary>

        [DataMember(Name = "netasBuyUf")]
        public long? NetasBuyUf { get; set; }

        /// <summary>
        /// Gets or Sets NetasBuyMilesCLP
        /// </summary>

        [DataMember(Name = "netasBuyMilesCLP")]
        public long? NetasBuyMilesCLP { get; set; }

        /// <summary>
        /// Gets or Sets NetasBuy
        /// </summary>

        [DataMember(Name = "netasBuy")]
        public long? NetasBuy { get; set; }

        /// <summary>
        /// Gets or Sets BuyInternalExemptNotRecorded
        /// </summary>

        [DataMember(Name = "buyInternalExemptNotRecorded")]
        public long? BuyInternalExemptNotRecorded { get; set; }

        /// <summary>
        /// Gets or Sets BuyInternalAffects
        /// </summary>

        [DataMember(Name = "buyInternalAffects")]
        public long? BuyInternalAffects { get; set; }

        /// <summary>
        /// Gets or Sets Tickets
        /// </summary>

        [DataMember(Name = "tickets")]
        public long? Tickets { get; set; }

        /// <summary>
        /// Gets or Sets PeriodSales
        /// </summary>

        [DataMember(Name = "periodSales")]
        public int? PeriodSales { get; set; }

        /// <summary>
        /// Gets or Sets TotalDebits
        /// </summary>

        [DataMember(Name = "totalDebits")]
        public long? TotalDebits { get; set; }

        /// <summary>
        /// Gets or Sets SecondCategory84
        /// </summary>

        [DataMember(Name = "secondCategory84")]
        public long? SecondCategory84 { get; set; }

        /// <summary>
        /// Gets or Sets PpmNetoDetermined
        /// </summary>

        [DataMember(Name = "ppmNetoDetermined")]
        public long? PpmNetoDetermined { get; set; }

        /// <summary>
        /// Gets or Sets Rate
        /// </summary>

        [DataMember(Name = "rate")]
        public double? Rate { get; set; }

        /// <summary>
        /// Gets or Sets StudioCraft84
        /// </summary>

        [DataMember(Name = "studioCraft84")]
        public long? StudioCraft84 { get; set; }

        /// <summary>
        /// Gets or Sets CarrierRentAlleged84
        /// </summary>

        [DataMember(Name = "carrierRentAlleged84")]
        public long? CarrierRentAlleged84 { get; set; }

        /// <summary>
        /// Gets or Sets BaseTaxable
        /// </summary>

        [DataMember(Name = "baseTaxable")]
        public long? BaseTaxable { get; set; }

        /// <summary>
        /// Gets or Sets BankSales
        /// </summary>

        [DataMember(Name = "bankSales")]
        public string BankSales { get; set; }

        /// <summary>
        /// Gets or Sets PaymentMeans
        /// </summary>

        [DataMember(Name = "paymentMeans")]
        public string PaymentMeans { get; set; }

        /// <summary>
        /// Gets or Sets PostponementTax
        /// </summary>

        [DataMember(Name = "postponementTax")]
        public long? PostponementTax { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class SalePeriodDetail {\n");
            sb.Append("  Month: ").Append(Month).Append("\n");
            sb.Append("  NameCorporateSales: ").Append(NameCorporateSales).Append("\n");
            sb.Append("  ClientIdSales: ").Append(ClientIdSales).Append("\n");
            sb.Append("  PayDay: ").Append(PayDay).Append("\n");
            sb.Append("  FolioSales: ").Append(FolioSales).Append("\n");
            sb.Append("  ExemptSalesAmountNoOrder: ").Append(ExemptSalesAmountNoOrder).Append("\n");
            sb.Append("  ExemptSalesAmountOrder: ").Append(ExemptSalesAmountOrder).Append("\n");
            sb.Append("  ExemptSalesWithRetentionOnMargeCommercial: ").Append(ExemptSalesWithRetentionOnMargeCommercial).Append("\n");
            sb.Append("  AmountNotesDebitReceived: ").Append(AmountNotesDebitReceived).Append("\n");
            sb.Append("  AmountNotesDebitSendOrder: ").Append(AmountNotesDebitSendOrder).Append("\n");
            sb.Append("  AmountNotesCreditForSalesNoOrder: ").Append(AmountNotesCreditForSalesNoOrder).Append("\n");
            sb.Append("  AmountNotesCreditForMachineVouchers: ").Append(AmountNotesCreditForMachineVouchers).Append("\n");
            sb.Append("  AmountNotesCreditForBill: ").Append(AmountNotesCreditForBill).Append("\n");
            sb.Append("  AmountNotesCredit: ").Append(AmountNotesCredit).Append("\n");
            sb.Append("  AmountLiquidationBill: ").Append(AmountLiquidationBill).Append("\n");
            sb.Append("  AmountImportsOrder: ").Append(AmountImportsOrder).Append("\n");
            sb.Append("  AmountImportsFixActive: ").Append(AmountImportsFixActive).Append("\n");
            sb.Append("  AmountImports: ").Append(AmountImports).Append("\n");
            sb.Append("  AmountRetentionParcialNeto: ").Append(AmountRetentionParcialNeto).Append("\n");
            sb.Append("  AmountBillNoOrder: ").Append(AmountBillNoOrder).Append("\n");
            sb.Append("  AmountBillBuyOrder: ").Append(AmountBillBuyOrder).Append("\n");
            sb.Append("  AmountBillBuyActiveFix: ").Append(AmountBillBuyActiveFix).Append("\n");
            sb.Append("  AmountBill: ").Append(AmountBill).Append("\n");
            sb.Append("  AmountExports: ").Append(AmountExports).Append("\n");
            sb.Append("  AmountContDetain: ").Append(AmountContDetain).Append("\n");
            sb.Append("  AmountBuyInternalExemptoNoTaxed: ").Append(AmountBuyInternalExemptoNoTaxed).Append("\n");
            sb.Append("  AmountBuyInternalAffects: ").Append(AmountBuyInternalAffects).Append("\n");
            sb.Append("  AmountTickets: ").Append(AmountTickets).Append("\n");
            sb.Append("  SalesNetasTotalMilesCLP: ").Append(SalesNetasTotalMilesCLP).Append("\n");
            sb.Append("  SalesNetasPocketsMilesCLP: ").Append(SalesNetasPocketsMilesCLP).Append("\n");
            sb.Append("  SalesNetasBillMilesCLP: ").Append(SalesNetasBillMilesCLP).Append("\n");
            sb.Append("  SalesNetasUf: ").Append(SalesNetasUf).Append("\n");
            sb.Append("  SalesNetasMilesCLP: ").Append(SalesNetasMilesCLP).Append("\n");
            sb.Append("  NetasSales: ").Append(NetasSales).Append("\n");
            sb.Append("  SalesExemptNoOrder: ").Append(SalesExemptNoOrder).Append("\n");
            sb.Append("  SalesExemptMilesCLP: ").Append(SalesExemptMilesCLP).Append("\n");
            sb.Append("  SalesExempt: ").Append(SalesExempt).Append("\n");
            sb.Append("  SalesWithRetentionAboutMargenCommercialization: ").Append(SalesWithRetentionAboutMargenCommercialization).Append("\n");
            sb.Append("  RetentionPartial: ").Append(RetentionPartial).Append("\n");
            sb.Append("  NotesDebitReceived: ").Append(NotesDebitReceived).Append("\n");
            sb.Append("  NotesDebitSendOrder: ").Append(NotesDebitSendOrder).Append("\n");
            sb.Append("  NotesCreditForValesMachines: ").Append(NotesCreditForValesMachines).Append("\n");
            sb.Append("  NotesCreditBySalesNoOrder: ").Append(NotesCreditBySalesNoOrder).Append("\n");
            sb.Append("  NotesCreditForBill: ").Append(NotesCreditForBill).Append("\n");
            sb.Append("  CreditNotes: ").Append(CreditNotes).Append("\n");
            sb.Append("  Margin: ").Append(Margin).Append("\n");
            sb.Append("  LiquidationBill: ").Append(LiquidationBill).Append("\n");
            sb.Append("  GiroImports: ").Append(GiroImports).Append("\n");
            sb.Append("  ImportsActiveFix: ").Append(ImportsActiveFix).Append("\n");
            sb.Append("  Imports: ").Append(Imports).Append("\n");
            sb.Append("  BillNoOrder: ").Append(BillNoOrder).Append("\n");
            sb.Append("  BillBuyRder: ").Append(BillBuyRder).Append("\n");
            sb.Append("  BillBuyActiveFix: ").Append(BillBuyActiveFix).Append("\n");
            sb.Append("  Bills: ").Append(Bills).Append("\n");
            sb.Append("  ExportsMilesCLP: ").Append(ExportsMilesCLP).Append("\n");
            sb.Append("  Exports: ").Append(Exports).Append("\n");
            sb.Append("  ContDetain: ").Append(ContDetain).Append("\n");
            sb.Append("  NetasBuyUf: ").Append(NetasBuyUf).Append("\n");
            sb.Append("  NetasBuyMilesCLP: ").Append(NetasBuyMilesCLP).Append("\n");
            sb.Append("  NetasBuy: ").Append(NetasBuy).Append("\n");
            sb.Append("  BuyInternalExemptNotRecorded: ").Append(BuyInternalExemptNotRecorded).Append("\n");
            sb.Append("  BuyInternalAffects: ").Append(BuyInternalAffects).Append("\n");
            sb.Append("  Tickets: ").Append(Tickets).Append("\n");
            sb.Append("  PeriodSales: ").Append(PeriodSales).Append("\n");
            sb.Append("  TotalDebits: ").Append(TotalDebits).Append("\n");
            sb.Append("  SecondCategory84: ").Append(SecondCategory84).Append("\n");
            sb.Append("  PpmNetoDetermined: ").Append(PpmNetoDetermined).Append("\n");
            sb.Append("  Rate: ").Append(Rate).Append("\n");
            sb.Append("  StudioCraft84: ").Append(StudioCraft84).Append("\n");
            sb.Append("  CarrierRentAlleged84: ").Append(CarrierRentAlleged84).Append("\n");
            sb.Append("  BaseTaxable: ").Append(BaseTaxable).Append("\n");
            sb.Append("  BankSales: ").Append(BankSales).Append("\n");
            sb.Append("  PaymentMeans: ").Append(PaymentMeans).Append("\n");
            sb.Append("  PostponementTax: ").Append(PostponementTax).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonSerializer.Serialize(this);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (ReferenceEquals(null, obj)) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((SalePeriodDetail)obj);
        }

        /// <summary>
        /// Returns true if SalePeriodDetail instances are equal
        /// </summary>
        /// <param name="other">Instance of SalePeriodDetail to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(SalePeriodDetail other)
        {
            if (ReferenceEquals(null, other)) return false;
            if (ReferenceEquals(this, other)) return true;

            return
                (
                    Month == other.Month ||
                    Month != null &&
                    Month.Equals(other.Month)
                ) &&
                (
                    NameCorporateSales == other.NameCorporateSales ||
                    NameCorporateSales != null &&
                    NameCorporateSales.Equals(other.NameCorporateSales)
                ) &&
                (
                    ClientIdSales == other.ClientIdSales ||
                    ClientIdSales != null &&
                    ClientIdSales.Equals(other.ClientIdSales)
                ) &&
                (
                    PayDay == other.PayDay ||
                    PayDay != null &&
                    PayDay.Equals(other.PayDay)
                ) &&
                (
                    FolioSales == other.FolioSales ||
                    FolioSales != null &&
                    FolioSales.Equals(other.FolioSales)
                ) &&
                (
                    ExemptSalesAmountNoOrder == other.ExemptSalesAmountNoOrder ||
                    ExemptSalesAmountNoOrder != null &&
                    ExemptSalesAmountNoOrder.Equals(other.ExemptSalesAmountNoOrder)
                ) &&
                (
                    ExemptSalesAmountOrder == other.ExemptSalesAmountOrder ||
                    ExemptSalesAmountOrder != null &&
                    ExemptSalesAmountOrder.Equals(other.ExemptSalesAmountOrder)
                ) &&
                (
                    ExemptSalesWithRetentionOnMargeCommercial == other.ExemptSalesWithRetentionOnMargeCommercial ||
                    ExemptSalesWithRetentionOnMargeCommercial != null &&
                    ExemptSalesWithRetentionOnMargeCommercial.Equals(other.ExemptSalesWithRetentionOnMargeCommercial)
                ) &&
                (
                    AmountNotesDebitReceived == other.AmountNotesDebitReceived ||
                    AmountNotesDebitReceived != null &&
                    AmountNotesDebitReceived.Equals(other.AmountNotesDebitReceived)
                ) &&
                (
                    AmountNotesDebitSendOrder == other.AmountNotesDebitSendOrder ||
                    AmountNotesDebitSendOrder != null &&
                    AmountNotesDebitSendOrder.Equals(other.AmountNotesDebitSendOrder)
                ) &&
                (
                    AmountNotesCreditForSalesNoOrder == other.AmountNotesCreditForSalesNoOrder ||
                    AmountNotesCreditForSalesNoOrder != null &&
                    AmountNotesCreditForSalesNoOrder.Equals(other.AmountNotesCreditForSalesNoOrder)
                ) &&
                (
                    AmountNotesCreditForMachineVouchers == other.AmountNotesCreditForMachineVouchers ||
                    AmountNotesCreditForMachineVouchers != null &&
                    AmountNotesCreditForMachineVouchers.Equals(other.AmountNotesCreditForMachineVouchers)
                ) &&
                (
                    AmountNotesCreditForBill == other.AmountNotesCreditForBill ||
                    AmountNotesCreditForBill != null &&
                    AmountNotesCreditForBill.Equals(other.AmountNotesCreditForBill)
                ) &&
                (
                    AmountNotesCredit == other.AmountNotesCredit ||
                    AmountNotesCredit != null &&
                    AmountNotesCredit.Equals(other.AmountNotesCredit)
                ) &&
                (
                    AmountLiquidationBill == other.AmountLiquidationBill ||
                    AmountLiquidationBill != null &&
                    AmountLiquidationBill.Equals(other.AmountLiquidationBill)
                ) &&
                (
                    AmountImportsOrder == other.AmountImportsOrder ||
                    AmountImportsOrder != null &&
                    AmountImportsOrder.Equals(other.AmountImportsOrder)
                ) &&
                (
                    AmountImportsFixActive == other.AmountImportsFixActive ||
                    AmountImportsFixActive != null &&
                    AmountImportsFixActive.Equals(other.AmountImportsFixActive)
                ) &&
                (
                    AmountImports == other.AmountImports ||
                    AmountImports != null &&
                    AmountImports.Equals(other.AmountImports)
                ) &&
                (
                    AmountRetentionParcialNeto == other.AmountRetentionParcialNeto ||
                    AmountRetentionParcialNeto != null &&
                    AmountRetentionParcialNeto.Equals(other.AmountRetentionParcialNeto)
                ) &&
                (
                    AmountBillNoOrder == other.AmountBillNoOrder ||
                    AmountBillNoOrder != null &&
                    AmountBillNoOrder.Equals(other.AmountBillNoOrder)
                ) &&
                (
                    AmountBillBuyOrder == other.AmountBillBuyOrder ||
                    AmountBillBuyOrder != null &&
                    AmountBillBuyOrder.Equals(other.AmountBillBuyOrder)
                ) &&
                (
                    AmountBillBuyActiveFix == other.AmountBillBuyActiveFix ||
                    AmountBillBuyActiveFix != null &&
                    AmountBillBuyActiveFix.Equals(other.AmountBillBuyActiveFix)
                ) &&
                (
                    AmountBill == other.AmountBill ||
                    AmountBill != null &&
                    AmountBill.Equals(other.AmountBill)
                ) &&
                (
                    AmountExports == other.AmountExports ||
                    AmountExports != null &&
                    AmountExports.Equals(other.AmountExports)
                ) &&
                (
                    AmountContDetain == other.AmountContDetain ||
                    AmountContDetain != null &&
                    AmountContDetain.Equals(other.AmountContDetain)
                ) &&
                (
                    AmountBuyInternalExemptoNoTaxed == other.AmountBuyInternalExemptoNoTaxed ||
                    AmountBuyInternalExemptoNoTaxed != null &&
                    AmountBuyInternalExemptoNoTaxed.Equals(other.AmountBuyInternalExemptoNoTaxed)
                ) &&
                (
                    AmountBuyInternalAffects == other.AmountBuyInternalAffects ||
                    AmountBuyInternalAffects != null &&
                    AmountBuyInternalAffects.Equals(other.AmountBuyInternalAffects)
                ) &&
                (
                    AmountTickets == other.AmountTickets ||
                    AmountTickets != null &&
                    AmountTickets.Equals(other.AmountTickets)
                ) &&
                (
                    SalesNetasTotalMilesCLP == other.SalesNetasTotalMilesCLP ||
                    SalesNetasTotalMilesCLP != null &&
                    SalesNetasTotalMilesCLP.Equals(other.SalesNetasTotalMilesCLP)
                ) &&
                (
                    SalesNetasPocketsMilesCLP == other.SalesNetasPocketsMilesCLP ||
                    SalesNetasPocketsMilesCLP != null &&
                    SalesNetasPocketsMilesCLP.Equals(other.SalesNetasPocketsMilesCLP)
                ) &&
                (
                    SalesNetasBillMilesCLP == other.SalesNetasBillMilesCLP ||
                    SalesNetasBillMilesCLP != null &&
                    SalesNetasBillMilesCLP.Equals(other.SalesNetasBillMilesCLP)
                ) &&
                (
                    SalesNetasUf == other.SalesNetasUf ||
                    SalesNetasUf != null &&
                    SalesNetasUf.Equals(other.SalesNetasUf)
                ) &&
                (
                    SalesNetasMilesCLP == other.SalesNetasMilesCLP ||
                    SalesNetasMilesCLP != null &&
                    SalesNetasMilesCLP.Equals(other.SalesNetasMilesCLP)
                ) &&
                (
                    NetasSales == other.NetasSales ||
                    NetasSales != null &&
                    NetasSales.Equals(other.NetasSales)
                ) &&
                (
                    SalesExemptNoOrder == other.SalesExemptNoOrder ||
                    SalesExemptNoOrder != null &&
                    SalesExemptNoOrder.Equals(other.SalesExemptNoOrder)
                ) &&
                (
                    SalesExemptMilesCLP == other.SalesExemptMilesCLP ||
                    SalesExemptMilesCLP != null &&
                    SalesExemptMilesCLP.Equals(other.SalesExemptMilesCLP)
                ) &&
                (
                    SalesExempt == other.SalesExempt ||
                    SalesExempt != null &&
                    SalesExempt.Equals(other.SalesExempt)
                ) &&
                (
                    SalesWithRetentionAboutMargenCommercialization == other.SalesWithRetentionAboutMargenCommercialization ||
                    SalesWithRetentionAboutMargenCommercialization != null &&
                    SalesWithRetentionAboutMargenCommercialization.Equals(other.SalesWithRetentionAboutMargenCommercialization)
                ) &&
                (
                    RetentionPartial == other.RetentionPartial ||
                    RetentionPartial != null &&
                    RetentionPartial.Equals(other.RetentionPartial)
                ) &&
                (
                    NotesDebitReceived == other.NotesDebitReceived ||
                    NotesDebitReceived != null &&
                    NotesDebitReceived.Equals(other.NotesDebitReceived)
                ) &&
                (
                    NotesDebitSendOrder == other.NotesDebitSendOrder ||
                    NotesDebitSendOrder != null &&
                    NotesDebitSendOrder.Equals(other.NotesDebitSendOrder)
                ) &&
                (
                    NotesCreditForValesMachines == other.NotesCreditForValesMachines ||
                    NotesCreditForValesMachines != null &&
                    NotesCreditForValesMachines.Equals(other.NotesCreditForValesMachines)
                ) &&
                (
                    NotesCreditBySalesNoOrder == other.NotesCreditBySalesNoOrder ||
                    NotesCreditBySalesNoOrder != null &&
                    NotesCreditBySalesNoOrder.Equals(other.NotesCreditBySalesNoOrder)
                ) &&
                (
                    NotesCreditForBill == other.NotesCreditForBill ||
                    NotesCreditForBill != null &&
                    NotesCreditForBill.Equals(other.NotesCreditForBill)
                ) &&
                (
                    CreditNotes == other.CreditNotes ||
                    CreditNotes != null &&
                    CreditNotes.Equals(other.CreditNotes)
                ) &&
                (
                    Margin == other.Margin ||
                    Margin != null &&
                    Margin.Equals(other.Margin)
                ) &&
                (
                    LiquidationBill == other.LiquidationBill ||
                    LiquidationBill != null &&
                    LiquidationBill.Equals(other.LiquidationBill)
                ) &&
                (
                    GiroImports == other.GiroImports ||
                    GiroImports != null &&
                    GiroImports.Equals(other.GiroImports)
                ) &&
                (
                    ImportsActiveFix == other.ImportsActiveFix ||
                    ImportsActiveFix != null &&
                    ImportsActiveFix.Equals(other.ImportsActiveFix)
                ) &&
                (
                    Imports == other.Imports ||
                    Imports != null &&
                    Imports.Equals(other.Imports)
                ) &&
                (
                    BillNoOrder == other.BillNoOrder ||
                    BillNoOrder != null &&
                    BillNoOrder.Equals(other.BillNoOrder)
                ) &&
                (
                    BillBuyRder == other.BillBuyRder ||
                    BillBuyRder != null &&
                    BillBuyRder.Equals(other.BillBuyRder)
                ) &&
                (
                    BillBuyActiveFix == other.BillBuyActiveFix ||
                    BillBuyActiveFix != null &&
                    BillBuyActiveFix.Equals(other.BillBuyActiveFix)
                ) &&
                (
                    Bills == other.Bills ||
                    Bills != null &&
                    Bills.Equals(other.Bills)
                ) &&
                (
                    ExportsMilesCLP == other.ExportsMilesCLP ||
                    ExportsMilesCLP != null &&
                    ExportsMilesCLP.Equals(other.ExportsMilesCLP)
                ) &&
                (
                    Exports == other.Exports ||
                    Exports != null &&
                    Exports.Equals(other.Exports)
                ) &&
                (
                    ContDetain == other.ContDetain ||
                    ContDetain != null &&
                    ContDetain.Equals(other.ContDetain)
                ) &&
                (
                    NetasBuyUf == other.NetasBuyUf ||
                    NetasBuyUf != null &&
                    NetasBuyUf.Equals(other.NetasBuyUf)
                ) &&
                (
                    NetasBuyMilesCLP == other.NetasBuyMilesCLP ||
                    NetasBuyMilesCLP != null &&
                    NetasBuyMilesCLP.Equals(other.NetasBuyMilesCLP)
                ) &&
                (
                    NetasBuy == other.NetasBuy ||
                    NetasBuy != null &&
                    NetasBuy.Equals(other.NetasBuy)
                ) &&
                (
                    BuyInternalExemptNotRecorded == other.BuyInternalExemptNotRecorded ||
                    BuyInternalExemptNotRecorded != null &&
                    BuyInternalExemptNotRecorded.Equals(other.BuyInternalExemptNotRecorded)
                ) &&
                (
                    BuyInternalAffects == other.BuyInternalAffects ||
                    BuyInternalAffects != null &&
                    BuyInternalAffects.Equals(other.BuyInternalAffects)
                ) &&
                (
                    Tickets == other.Tickets ||
                    Tickets != null &&
                    Tickets.Equals(other.Tickets)
                ) &&
                (
                    PeriodSales == other.PeriodSales ||
                    PeriodSales != null &&
                    PeriodSales.Equals(other.PeriodSales)
                ) &&
                (
                    TotalDebits == other.TotalDebits ||
                    TotalDebits != null &&
                    TotalDebits.Equals(other.TotalDebits)
                ) &&
                (
                    SecondCategory84 == other.SecondCategory84 ||
                    SecondCategory84 != null &&
                    SecondCategory84.Equals(other.SecondCategory84)
                ) &&
                (
                    PpmNetoDetermined == other.PpmNetoDetermined ||
                    PpmNetoDetermined != null &&
                    PpmNetoDetermined.Equals(other.PpmNetoDetermined)
                ) &&
                (
                    Rate == other.Rate ||
                    Rate != null &&
                    Rate.Equals(other.Rate)
                ) &&
                (
                    StudioCraft84 == other.StudioCraft84 ||
                    StudioCraft84 != null &&
                    StudioCraft84.Equals(other.StudioCraft84)
                ) &&
                (
                    CarrierRentAlleged84 == other.CarrierRentAlleged84 ||
                    CarrierRentAlleged84 != null &&
                    CarrierRentAlleged84.Equals(other.CarrierRentAlleged84)
                ) &&
                (
                    BaseTaxable == other.BaseTaxable ||
                    BaseTaxable != null &&
                    BaseTaxable.Equals(other.BaseTaxable)
                ) &&
                (
                    BankSales == other.BankSales ||
                    BankSales != null &&
                    BankSales.Equals(other.BankSales)
                ) &&
                (
                    PaymentMeans == other.PaymentMeans ||
                    PaymentMeans != null &&
                    PaymentMeans.Equals(other.PaymentMeans)
                ) &&
                (
                    PostponementTax == other.PostponementTax ||
                    PostponementTax != null &&
                    PostponementTax.Equals(other.PostponementTax)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                if (Month != null)
                    hashCode = hashCode * 59 + Month.GetHashCode();
                if (NameCorporateSales != null)
                    hashCode = hashCode * 59 + NameCorporateSales.GetHashCode();
                if (ClientIdSales != null)
                    hashCode = hashCode * 59 + ClientIdSales.GetHashCode();
                if (PayDay != null)
                    hashCode = hashCode * 59 + PayDay.GetHashCode();
                if (FolioSales != null)
                    hashCode = hashCode * 59 + FolioSales.GetHashCode();
                if (ExemptSalesAmountNoOrder != null)
                    hashCode = hashCode * 59 + ExemptSalesAmountNoOrder.GetHashCode();
                if (ExemptSalesAmountOrder != null)
                    hashCode = hashCode * 59 + ExemptSalesAmountOrder.GetHashCode();
                if (ExemptSalesWithRetentionOnMargeCommercial != null)
                    hashCode = hashCode * 59 + ExemptSalesWithRetentionOnMargeCommercial.GetHashCode();
                if (AmountNotesDebitReceived != null)
                    hashCode = hashCode * 59 + AmountNotesDebitReceived.GetHashCode();
                if (AmountNotesDebitSendOrder != null)
                    hashCode = hashCode * 59 + AmountNotesDebitSendOrder.GetHashCode();
                if (AmountNotesCreditForSalesNoOrder != null)
                    hashCode = hashCode * 59 + AmountNotesCreditForSalesNoOrder.GetHashCode();
                if (AmountNotesCreditForMachineVouchers != null)
                    hashCode = hashCode * 59 + AmountNotesCreditForMachineVouchers.GetHashCode();
                if (AmountNotesCreditForBill != null)
                    hashCode = hashCode * 59 + AmountNotesCreditForBill.GetHashCode();
                if (AmountNotesCredit != null)
                    hashCode = hashCode * 59 + AmountNotesCredit.GetHashCode();
                if (AmountLiquidationBill != null)
                    hashCode = hashCode * 59 + AmountLiquidationBill.GetHashCode();
                if (AmountImportsOrder != null)
                    hashCode = hashCode * 59 + AmountImportsOrder.GetHashCode();
                if (AmountImportsFixActive != null)
                    hashCode = hashCode * 59 + AmountImportsFixActive.GetHashCode();
                if (AmountImports != null)
                    hashCode = hashCode * 59 + AmountImports.GetHashCode();
                if (AmountRetentionParcialNeto != null)
                    hashCode = hashCode * 59 + AmountRetentionParcialNeto.GetHashCode();
                if (AmountBillNoOrder != null)
                    hashCode = hashCode * 59 + AmountBillNoOrder.GetHashCode();
                if (AmountBillBuyOrder != null)
                    hashCode = hashCode * 59 + AmountBillBuyOrder.GetHashCode();
                if (AmountBillBuyActiveFix != null)
                    hashCode = hashCode * 59 + AmountBillBuyActiveFix.GetHashCode();
                if (AmountBill != null)
                    hashCode = hashCode * 59 + AmountBill.GetHashCode();
                if (AmountExports != null)
                    hashCode = hashCode * 59 + AmountExports.GetHashCode();
                if (AmountContDetain != null)
                    hashCode = hashCode * 59 + AmountContDetain.GetHashCode();
                if (AmountBuyInternalExemptoNoTaxed != null)
                    hashCode = hashCode * 59 + AmountBuyInternalExemptoNoTaxed.GetHashCode();
                if (AmountBuyInternalAffects != null)
                    hashCode = hashCode * 59 + AmountBuyInternalAffects.GetHashCode();
                if (AmountTickets != null)
                    hashCode = hashCode * 59 + AmountTickets.GetHashCode();
                if (SalesNetasTotalMilesCLP != null)
                    hashCode = hashCode * 59 + SalesNetasTotalMilesCLP.GetHashCode();
                if (SalesNetasPocketsMilesCLP != null)
                    hashCode = hashCode * 59 + SalesNetasPocketsMilesCLP.GetHashCode();
                if (SalesNetasBillMilesCLP != null)
                    hashCode = hashCode * 59 + SalesNetasBillMilesCLP.GetHashCode();
                if (SalesNetasUf != null)
                    hashCode = hashCode * 59 + SalesNetasUf.GetHashCode();
                if (SalesNetasMilesCLP != null)
                    hashCode = hashCode * 59 + SalesNetasMilesCLP.GetHashCode();
                if (NetasSales != null)
                    hashCode = hashCode * 59 + NetasSales.GetHashCode();
                if (SalesExemptNoOrder != null)
                    hashCode = hashCode * 59 + SalesExemptNoOrder.GetHashCode();
                if (SalesExemptMilesCLP != null)
                    hashCode = hashCode * 59 + SalesExemptMilesCLP.GetHashCode();
                if (SalesExempt != null)
                    hashCode = hashCode * 59 + SalesExempt.GetHashCode();
                if (SalesWithRetentionAboutMargenCommercialization != null)
                    hashCode = hashCode * 59 + SalesWithRetentionAboutMargenCommercialization.GetHashCode();
                if (RetentionPartial != null)
                    hashCode = hashCode * 59 + RetentionPartial.GetHashCode();
                if (NotesDebitReceived != null)
                    hashCode = hashCode * 59 + NotesDebitReceived.GetHashCode();
                if (NotesDebitSendOrder != null)
                    hashCode = hashCode * 59 + NotesDebitSendOrder.GetHashCode();
                if (NotesCreditForValesMachines != null)
                    hashCode = hashCode * 59 + NotesCreditForValesMachines.GetHashCode();
                if (NotesCreditBySalesNoOrder != null)
                    hashCode = hashCode * 59 + NotesCreditBySalesNoOrder.GetHashCode();
                if (NotesCreditForBill != null)
                    hashCode = hashCode * 59 + NotesCreditForBill.GetHashCode();
                if (CreditNotes != null)
                    hashCode = hashCode * 59 + CreditNotes.GetHashCode();
                if (Margin != null)
                    hashCode = hashCode * 59 + Margin.GetHashCode();
                if (LiquidationBill != null)
                    hashCode = hashCode * 59 + LiquidationBill.GetHashCode();
                if (GiroImports != null)
                    hashCode = hashCode * 59 + GiroImports.GetHashCode();
                if (ImportsActiveFix != null)
                    hashCode = hashCode * 59 + ImportsActiveFix.GetHashCode();
                if (Imports != null)
                    hashCode = hashCode * 59 + Imports.GetHashCode();
                if (BillNoOrder != null)
                    hashCode = hashCode * 59 + BillNoOrder.GetHashCode();
                if (BillBuyRder != null)
                    hashCode = hashCode * 59 + BillBuyRder.GetHashCode();
                if (BillBuyActiveFix != null)
                    hashCode = hashCode * 59 + BillBuyActiveFix.GetHashCode();
                if (Bills != null)
                    hashCode = hashCode * 59 + Bills.GetHashCode();
                if (ExportsMilesCLP != null)
                    hashCode = hashCode * 59 + ExportsMilesCLP.GetHashCode();
                if (Exports != null)
                    hashCode = hashCode * 59 + Exports.GetHashCode();
                if (ContDetain != null)
                    hashCode = hashCode * 59 + ContDetain.GetHashCode();
                if (NetasBuyUf != null)
                    hashCode = hashCode * 59 + NetasBuyUf.GetHashCode();
                if (NetasBuyMilesCLP != null)
                    hashCode = hashCode * 59 + NetasBuyMilesCLP.GetHashCode();
                if (NetasBuy != null)
                    hashCode = hashCode * 59 + NetasBuy.GetHashCode();
                if (BuyInternalExemptNotRecorded != null)
                    hashCode = hashCode * 59 + BuyInternalExemptNotRecorded.GetHashCode();
                if (BuyInternalAffects != null)
                    hashCode = hashCode * 59 + BuyInternalAffects.GetHashCode();
                if (Tickets != null)
                    hashCode = hashCode * 59 + Tickets.GetHashCode();
                if (PeriodSales != null)
                    hashCode = hashCode * 59 + PeriodSales.GetHashCode();
                if (TotalDebits != null)
                    hashCode = hashCode * 59 + TotalDebits.GetHashCode();
                if (SecondCategory84 != null)
                    hashCode = hashCode * 59 + SecondCategory84.GetHashCode();
                if (PpmNetoDetermined != null)
                    hashCode = hashCode * 59 + PpmNetoDetermined.GetHashCode();
                if (Rate != null)
                    hashCode = hashCode * 59 + Rate.GetHashCode();
                if (StudioCraft84 != null)
                    hashCode = hashCode * 59 + StudioCraft84.GetHashCode();
                if (CarrierRentAlleged84 != null)
                    hashCode = hashCode * 59 + CarrierRentAlleged84.GetHashCode();
                if (BaseTaxable != null)
                    hashCode = hashCode * 59 + BaseTaxable.GetHashCode();
                if (BankSales != null)
                    hashCode = hashCode * 59 + BankSales.GetHashCode();
                if (PaymentMeans != null)
                    hashCode = hashCode * 59 + PaymentMeans.GetHashCode();
                if (PostponementTax != null)
                    hashCode = hashCode * 59 + PostponementTax.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
#pragma warning disable 1591

        public static bool operator ==(SalePeriodDetail left, SalePeriodDetail right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(SalePeriodDetail left, SalePeriodDetail right)
        {
            return !Equals(left, right);
        }

#pragma warning restore 1591
        #endregion Operators
    }
}
