/*
 * Datamart Customer Relationship Management
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System.Runtime.Serialization;
using System.Text;
using System.Text.Json;


namespace Itau.Cl.RF.CustomerRelationshipMgmnt.Bff.API.Models
{
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class SiiAd : IEquatable<SiiAd>
    {
        /// <summary>
        /// Gets or Sets DateAd
        /// </summary>

        [DataMember(Name = "dateAd")]
        public long? DateAd { get; set; }

        /// <summary>
        /// Gets or Sets CommentAd
        /// </summary>

        [DataMember(Name = "commentAd")]
        public string CommentAd { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class SiiAd {\n");
            sb.Append("  DateAd: ").Append(DateAd).Append("\n");
            sb.Append("  CommentAd: ").Append(CommentAd).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonSerializer.Serialize(this);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (ReferenceEquals(null, obj)) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((SiiAd)obj);
        }

        /// <summary>
        /// Returns true if SiiAd instances are equal
        /// </summary>
        /// <param name="other">Instance of SiiAd to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(SiiAd other)
        {
            if (ReferenceEquals(null, other)) return false;
            if (ReferenceEquals(this, other)) return true;

            return
                (
                    DateAd == other.DateAd ||
                    DateAd != null &&
                    DateAd.Equals(other.DateAd)
                ) &&
                (
                    CommentAd == other.CommentAd ||
                    CommentAd != null &&
                    CommentAd.Equals(other.CommentAd)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                if (DateAd != null)
                    hashCode = hashCode * 59 + DateAd.GetHashCode();
                if (CommentAd != null)
                    hashCode = hashCode * 59 + CommentAd.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
#pragma warning disable 1591

        public static bool operator ==(SiiAd left, SiiAd right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(SiiAd left, SiiAd right)
        {
            return !Equals(left, right);
        }

#pragma warning restore 1591
        #endregion Operators
    }
}
